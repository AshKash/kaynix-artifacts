export const STANDARD_MCP_TOOLS=[{name:"search_products",description:"Search for products on the current e-commerce site",inputSchema:{type:"object",properties:{query:{type:"string",description:"Search query for products"}},required:["query"]}},{name:"apply_filter_gender",description:"Filter products by gender",inputSchema:{type:"object",properties:{value:{type:"string",enum:["men","women","kids"],description:"Gender filter to apply"}},required:["value"]}},{name:"apply_filter_price_max",description:"Filter products by maximum price",inputSchema:{type:"object",properties:{value:{type:"number",description:"Maximum price in USD"}},required:["value"]}},{name:"apply_filter_brand",description:"Filter products by brand",inputSchema:{type:"object",properties:{value:{type:"string",description:"Brand name to filter by"}},required:["value"]}},{name:"clear_filters",description:"Clear all applied filters",inputSchema:{type:"object",properties:{},additionalProperties:!1}},{name:"get_page_products",description:"Extract products from the current page as JSON-LD",inputSchema:{type:"object",properties:{},additionalProperties:!1}},{name:"add_to_cart",description:"Add a product to the shopping cart",inputSchema:{type:"object",properties:{productId:{type:"string",description:"Product ID or URL of the product to add"},size:{type:"string",description:"Size selection (optional)"},quantity:{type:"number",description:"Quantity to add (default: 1)"}},required:["productId"]}}];export class MCPResponse{constructor(e,r,t=null){this.success=e,this.message=r,this.data=t}static success(e,r=null){return new MCPResponse(!0,e,r)}static error(e,r=null){return new MCPResponse(!1,e,r)}}export class ProductJsonLD{constructor(e){this["@type"]="Product",this["@id"]=e.productUrl||e.title||"unknown",this.name=e.title||"Unknown Product",this.offers={"@type":"Offer",price:e.priceText?.replace(/[$,]/g,"")||"0",priceCurrency:"USD"},e.rating&&(this.aggregateRating={"@type":"AggregateRating",ratingValue:e.rating})}}export class BaseMCPServer{constructor(e){this.adapter=e}getCapabilities(){return{tools:STANDARD_MCP_TOOLS}}async callTool(e,r){try{switch(e){case"search_products":return await this.searchProducts(r.query);case"apply_filter_gender":return await this.applyGenderFilter(r.value);case"apply_filter_price_max":return await this.applyPriceMaxFilter(r.value);case"apply_filter_brand":return await this.applyBrandFilter(r.value);case"clear_filters":return await this.clearFilters();case"get_page_products":return await this.getPageProducts();case"add_to_cart":return await this.addToCart(r);default:return MCPResponse.error(`Unknown tool: ${e}`)}}catch(t){return MCPResponse.error(`Tool execution failed: ${t.message}`)}}async searchProducts(e){throw new Error("searchProducts must be implemented by adapter")}async applyGenderFilter(e){throw new Error("applyGenderFilter must be implemented by adapter")}async applyPriceMaxFilter(e){throw new Error("applyPriceMaxFilter must be implemented by adapter")}async applyBrandFilter(e){throw new Error("applyBrandFilter must be implemented by adapter")}async clearFilters(){throw new Error("clearFilters must be implemented by adapter")}async getPageProducts(){throw new Error("getPageProducts must be implemented by adapter")}async addToCart(e){throw new Error("addToCart must be implemented by adapter")}}