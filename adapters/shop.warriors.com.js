import{BaseSiteAdapter,STANDARD_MCP_TOOLS,ProductJsonLD,MCPResponse}from"./base-adapter.js";export class WarriorsShopAdapter extends BaseSiteAdapter{constructor(t={}){super("shop.warriors.com",t)}async extractProducts(t={}){this.log("Extracting products from shop.warriors.com...");const r=[],s=['div[class*="product-card"]','div[class*="product-item"]','article[class*="product"]','div[class*="ProductCard"]','div[class*="product-grid"] > div','div[data-talos="productCard"]',"div.product-card"];let o=[];for(const c of s)if(o=document.querySelectorAll(c),o.length>0){this.log(`Found ${o.length} products using selector: ${c}`);break}if(0===o.length)return this.log("No product elements found. The page may not have loaded properly."),{products:[]};for(const c of o)try{const t={},s=['[class*="product-title"]','[class*="product-name"]','h2[class*="product"]','h3[class*="product"]','a[class*="product-link"]','[data-talos="productTitle"]'];for(const r of s){const s=c.querySelector(r);if(s){t.title=s.textContent.trim();break}}const o=c.querySelector("a[href]");if(o){const r=o.getAttribute("href");t.url=r.startsWith("http")?r:`https://shop.warriors.com${r}`}const e=['[class*="price-tag"]','[class*="product-price"]','[class*="price-display"]','span[class*="price"]','[data-talos="price"]',".price"];for(const r of e){const s=c.querySelector(r);if(s){const r=s.textContent.trim();if(t.price=this.extractPrice(r),t.price)break}}const i=['img[class*="product-image"]','img[class*="product-img"]',"picture img",'img[data-talos="productImage"]',"img"];for(const r of i){const s=c.querySelector(r);if(s&&(t.imageUrl=s.src||s.getAttribute("data-src"),t.imageUrl))break}t.title&&t.price&&t.url?r.push(t):this.log("Skipping product with missing fields:",{title:t.title||"missing",price:t.price||"missing",url:t.url||"missing"})}catch(e){this.error("Error extracting product:",e)}return this.log(`Extracted ${r.length} products`),{products:r}}getMCPCapabilities(){return{tools:STANDARD_MCP_TOOLS}}async callMCPTool(t,r){try{if("get_page_products"===t){const t=await this.extractProducts();if(t.products&&t.products.length>0){const r=t.products.map(t=>new ProductJsonLD(t));return MCPResponse.success(`Found ${r.length} products`,r)}return MCPResponse.success("No products found on page",[])}return MCPResponse.error(`Unknown tool: ${t}`)}catch(s){return MCPResponse.error(`Tool execution failed: ${s.message}`)}}}export default WarriorsShopAdapter;